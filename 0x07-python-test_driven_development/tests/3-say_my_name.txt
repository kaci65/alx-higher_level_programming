The ``3-say_my_name(first_name, last_name="")`` module
====================================================

Using ``say_my_name``
----------------------

This is an example text file in reStructuredText format.  First import
``say_my_name`` from the ``3-say_my_name`` module:

    >>> say_my_name = __import__('3-say_my_name').say_my_name

# Check if output is correct:

  Two strings:
  >>> say_my_name("John", "Smith")
  My name is John Smith

  Two strings:
  >>> say_my_name("Walter", "White")
  My name is Walter White
    
  Missing 2nd argument:
  >>> say_my_name("Bob")
  My name is Bob 
    
  First name is number:
  >>> say_my_name(9, "Smith")
  Traceback (most recent call last):
  ...
  TypeError: first_name must be a string

  Last name is number:
  >>> say_my_name("Ben", 10)
  Traceback (most recent call last):
  ...
  TypeError: last_name must be a string
    
  First name is boolean:
  >>> say_my_name(True, "Bond")
  Traceback (most recent call last):
  ...
  TypeError: first_name must be a string

  Last name is boolean:
  >>> say_my_name("James", False)
  Traceback (most recent call last):
  ...
  TypeError: last_name must be a string

  Empty string:
  >>> say_my_name()
  Traceback (most recent call last):
  ...
  TypeError: say_my_name() missing 1 required positional argument: 'first_name'
